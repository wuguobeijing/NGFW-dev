# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer
import os
from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import *
from tkinter.messagebox import showwarning


class MY_LOG_GUI():
    def __init__(self, log_window):
        self.log_window = log_window
        self.count1 = -1
        self.count2 = -1

    def set_log_window(self):
        self.log_window.title("result log")  # 窗口名
        self.log_window.geometry('540x620+480+260')
        self.log_top = Frame(self.log_window, relief=RAISED, borderwidth=2)
        self.log_top.pack(padx=2, pady=2, ipady=2, ipadx=2, side='top')
        self.log_common = Frame(self.log_top)
        self.log_common.pack(padx=2, pady=2, ipady=2, ipadx=2, side='top')
        self.log_printout_Scroll = Scrollbar(self.log_common)
        self.log_printout_Scroll.pack(side='right', fill='y')
        self.show_common_log = Text(self.log_common, yscrollcommand=self.log_printout_Scroll.set, width=68, height=15)
        self.show_common_log.pack(side='right', fill=BOTH)
        self.log_printout_Scroll.config(command=self.show_common_log.yview)

        self.log_specific = Frame(self.log_top)
        self.log_specific.pack(padx=2, pady=2, ipady=2, ipadx=2, side='bottom')
        self.log_spe_Scroll = Scrollbar(self.log_specific)
        self.log_spe_Scroll.pack(side='right', fill='y')
        self.show_spe_log = Text(self.log_specific, yscrollcommand=self.log_spe_Scroll.set, width=68, height=15)
        self.show_spe_log.pack(side='right', fill=BOTH)
        self.log_spe_Scroll.config(command=self.show_spe_log.yview)

        self.log_common_button = Button(self.log_top, text="工作日志", bg="lightblue", width=16, height=2,
                                        command=self.read_common_log)
        self.log_common_button.pack(side='left', anchor='w', padx=10)
        self.log_model_button = Button(self.log_top, text="模型日志", bg="lightblue", width=16, height=2,
                                       command=self.read_model_log)
        self.log_model_button.pack(side='left', anchor='w', padx=10)

    def newest_common_log(self, path):
        files = os.listdir(path)
        paths = [os.path.join(path, basename) for basename in files]
        if abs(self.count1) > len(paths):
            return None
        else:
            text = paths[self.count1]
            self.count1 -= 1
            return text

    def newest_model_log(self, path):
        files = os.listdir(path)
        paths = [os.path.join(path, basename) for basename in files]
        if abs(self.count2) > len(paths):
            return None
        else:
            text = paths[self.count2]
            self.count2 -= 1
            return text

    def read_common_log(self):
        file_path = self.newest_common_log('/media/wuguo-buaa/LENOVO_USB_HDD/PycharmProjects/NGFW-dev/gui/NGFW/log')
        # print('打开文件：', file_path)
        if file_path is not None:
            with open(file=file_path, mode='r+', encoding='utf-8') as file:
                file_text = file.read()
            self.show_common_log.insert('insert', file_path)
            self.show_common_log.insert('insert', '\n')
            self.show_common_log.insert('insert', file_text)

    def read_model_log(self):
        file_path = self.newest_model_log('/media/wuguo-buaa/LENOVO_USB_HDD/PycharmProjects/NGFW-dev/src/Model/log')
        # print('打开文件：', file_path)
        if file_path is not None:
            try:
                with open(file=file_path, mode='r+', encoding='utf-8') as file:
                    file_text = file.read()
                self.show_spe_log.insert('insert', file_text)
                self.show_spe_log.insert('insert', '\n')
                self.show_spe_log.insert('insert', file_text)
            except:
                showwarning('error', 'cannot find this file')
#
# OUTPUT_PATH = Path(__file__).parent
# ASSETS_PATH = OUTPUT_PATH / Path("assets")
#
#
# def relative_to_assets(path: str) -> Path:
#     return ASSETS_PATH / Path(path)
#
#
# window = Tk()
#
# window.geometry("1317x855")
# window.configure(bg = "#282B2D")
#
#
# canvas = Canvas(
#     window,
#     bg = "#282B2D",
#     height = 855,
#     width = 1317,
#     bd = 0,
#     highlightthickness = 0,
#     relief = "ridge"
# )
#
# canvas.place(x = 0, y = 0)
# canvas.create_rectangle(
#     0.0,
#     1.0,
#     345.7995910644531,
#     856.3531494140625,
#     fill="#D9D9D9",
#     outline="")
#
# button_image_1 = PhotoImage(
#     file=relative_to_assets("button_1.png"))
# button_1 = Button(
#     image=button_image_1,
#     borderwidth=0,
#     highlightthickness=0,
#     command=lambda: print("button_1 clicked"),
#     relief="flat"
# )
# button_1.place(
#     x=70.5535888671875,
#     y=736.8928833007812,
#     width=193.36904907226562,
#     height=64.45635986328125
# )
#
# button_image_2 = PhotoImage(
#     file=relative_to_assets("button_2.png"))
# button_2 = Button(
#     image=button_image_2,
#     borderwidth=0,
#     highlightthickness=0,
#     command=lambda: print("button_2 clicked"),
#     relief="flat"
# )
# button_2.place(
#     x=68.8115234375,
#     y=555.71826171875,
#     width=196.85317993164062,
#     height=64.45635986328125
# )
#
# button_image_3 = PhotoImage(
#     file=relative_to_assets("button_3.png"))
# button_3 = Button(
#     image=button_image_3,
#     borderwidth=0,
#     highlightthickness=0,
#     command=lambda: print("button_3 clicked"),
#     relief="flat"
# )
# button_3.place(
#     x=101.91070556640625,
#     y=481.6805419921875,
#     width=166.3670654296875,
#     height=32.228179931640625
# )
#
# button_image_4 = PhotoImage(
#     file=relative_to_assets("button_4.png"))
# button_4 = Button(
#     image=button_image_4,
#     borderwidth=0,
#     highlightthickness=0,
#     command=lambda: print("button_4 clicked"),
#     relief="flat"
# )
# button_4.place(
#     x=102.78173828125,
#     y=437.2579345703125,
#     width=166.3670654296875,
#     height=32.22817611694336
# )
#
# button_image_5 = PhotoImage(
#     file=relative_to_assets("button_5.png"))
# button_5 = Button(
#     image=button_image_5,
#     borderwidth=0,
#     highlightthickness=0,
#     command=lambda: print("button_5 clicked"),
#     relief="flat"
# )
# button_5.place(
#     x=101.91070556640625,
#     y=398.0614929199219,
#     width=166.3670654296875,
#     height=32.22817611694336
# )
#
# button_image_6 = PhotoImage(
#     file=relative_to_assets("button_6.png"))
# button_6 = Button(
#     image=button_image_6,
#     borderwidth=0,
#     highlightthickness=0,
#     command=lambda: print("button_6 clicked"),
#     relief="flat"
# )
# button_6.place(
#     x=68.8115234375,
#     y=314.4424743652344,
#     width=202.079345703125,
#     height=64.45635223388672
# )
#
# button_image_7 = PhotoImage(
#     file=relative_to_assets("button_7.png"))
# button_7 = Button(
#     image=button_image_7,
#     borderwidth=0,
#     highlightthickness=0,
#     command=lambda: print("button_7 clicked"),
#     relief="flat"
# )
# button_7.place(
#     x=73.16668701171875,
#     y=216.88690185546875,
#     width=193.36904907226562,
#     height=64.45635986328125
# )
#
# button_image_8 = PhotoImage(
#     file=relative_to_assets("button_8.png"))
# button_8 = Button(
#     image=button_image_8,
#     borderwidth=0,
#     highlightthickness=0,
#     command=lambda: print("button_8 clicked"),
#     relief="flat"
# )
# button_8.place(
#     x=87.1031494140625,
#     y=112.36309814453125,
#     width=166.3670654296875,
#     height=64.45635986328125
# )
#
# image_image_1 = PhotoImage(
#     file=relative_to_assets("image_1.png"))
# image_1 = canvas.create_image(
#     158.1329345703125,
#     42.130950927734375,
#     image=image_image_1
# )
#
# image_image_2 = PhotoImage(
#     file=relative_to_assets("image_2.png"))
# image_2 = canvas.create_image(
#     641.3829345703125,
#     106.297607421875,
#     image=image_image_2
# )
#
# canvas.create_text(
#     773.0,
#     189.0,
#     anchor="nw",
#     text="工作日志",
#     fill="#D9D9D9",
#     font=("Roboto Regular", 27 * -1)
# )
#
# canvas.create_text(
#     773.0,
#     486.0,
#     anchor="nw",
#     text="防护日志",
#     fill="#D9D9D9",
#     font=("Roboto Regular", 27 * -1)
# )
#
# image_image_3 = PhotoImage(
#     file=relative_to_assets("image_3.png"))
# image_3 = canvas.create_image(
#     658.0,
#     428.0,
#     image=image_image_3
# )
# window.resizable(False, False)
# window.mainloop()
