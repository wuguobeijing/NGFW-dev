# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer
import tkinter
from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Text, Button, PhotoImage, LabelFrame, IntVar, Radiobutton, N, Checkbutton, END


class MY_ARGS_GUI(tkinter.Toplevel):
    def relative_to_assets(self, path: str) -> Path:
        return self.ASSETS_PATH / Path(path)

    def add_args(self):
        self.parent.interface = [self.entry_interface.get(1.0, END).split('\n')[0], 'eth0'][self.entry_interface.get(1.0, END) == '\n']
        self.parent.gui = [True, False][self.varGUI.get() == 0]
        self.parent.log_level = str(self.table_num_log.get())
        self.parent.mode = self.table_num_label.get()
        self.destroy()  # 销毁窗口

    def __init__(self, parent):
        super().__init__()
        self.title('设置信息')
        self.parent = parent  # 显式地保留父窗口
        self.OUTPUT_PATH = Path(__file__).parent
        self.ASSETS_PATH = self.OUTPUT_PATH / Path("assets")
        self.interface = 'eth0'
        self.log_level = '1'
        self.mode = None
        self.gui = False

        self.geometry("650x304")
        self.configure(bg="#FFFFFF")
        self.resizable(False, False)
        self.canvas = Canvas(
            self,
            bg="#FFFFFF",
            height=304,
            width=650,
            bd=0,
            highlightthickness=0,
            relief="ridge"
        )

        self.canvas.place(x=0, y=0)
        self.canvas.create_rectangle(
            0.0,
            2.0,
            250.0,
            294.0,
            fill="#FCD12A",
            outline="")

        self.canvas.create_rectangle(
            267.0,
            79.0,
            630.0,
            300.0,
            fill="#29C9FC",
            outline="")

        self.canvas.create_text(
            487.0,
            96.0,
            anchor="nw",
            text="工作模式",
            fill="#FFFFFF",
            font=("Montserrat SemiBold", 23 * -1)
        )

        self.choose_table_mode = LabelFrame(self.canvas, width=5, height=2, background="#2ACAFC")
        self.choose_table_mode.place(
            x=435.0,
            y=130.0,
            width=190.0,
            height=25.0)
        TABLES_label = [('阻挡', 1), ('分析', 2), ('默认', 3)]
        self.table_num_label = IntVar()
        self.table_num_label.set(3)
        for TABLE, num in TABLES_label:
            b = Radiobutton(self.choose_table_mode, text=TABLE, variable=self.table_num_label, value=num,
                            background="#2ACAFC", height=1)
            b.pack(side='left', anchor=N, padx=1)

        self.canvas.create_text(
            315.0,
            96.0,
            anchor="nw",
            text="接口地址",
            fill="#FFFFFF",
            font=("Montserrat SemiBold", 23 * -1)
        )
        self.entry_interface = Text(
            self.canvas,
            bd=0,
            bg="#F8F8F8",
            highlightthickness=0,
        )
        self.entry_interface.place(
            x=340.0,
            y=137.0,
            width=52.0,
            height=22.0
        )

        self.canvas.create_text(
            315.0,
            186.0,
            anchor="nw",
            text="日志级别",
            fill="#FFFFFF",
            font=("Montserrat SemiBold", 23 * -1)
        )

        self.choose_table_log = LabelFrame(self.canvas, width=5, height=2, background="#2ACAFC")
        self.choose_table_log.place(
            x=300.0,
            y=225.0,
            width=135.0,
            height=25.0)
        TABLES_log = [('1', 1), ('2', 2), ('3', 3)]
        self.table_num_log = IntVar()
        self.table_num_log.set(1)
        for TABLE, num in TABLES_log:
            b = Radiobutton(self.choose_table_log, text=TABLE, variable=self.table_num_log, value=num,
                            background="#2ACAFC")
            b.pack(side='left', anchor=N, padx=1)

        self.canvas.create_text(
            487.0,
            186.0,
            anchor="nw",
            text="显示界面",
            fill="#FFFFFF",
            font=("Montserrat SemiBold", 23 * -1)
        )
        self.varGUI = IntVar()  # 定义var1整型变量用来存放选择行为返回值
        self.GUI_choice = Checkbutton(self.canvas, variable=self.varGUI, onvalue=1, offvalue=0)
        self.GUI_choice.place(
            x=535.0,
            y=227.0,
            width=12.0,
            height=12.0)

        self.button_image_1 = PhotoImage(
            file=self.relative_to_assets("button_1.png"))
        self.button_1 = Button(
            self.canvas,
            image=self.button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("self.button_1 clicked"),
            relief="flat"
        )
        self.button_1.place(
            x=263.0,
            y=2.0,
            width=377.0,
            height=59.0
        )

        self.button_image_2 = PhotoImage(
            file=self.relative_to_assets("button_2.png"))
        self.button_2 = Button(
            self.canvas,
            image=self.button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("self.button_2 clicked"),
            relief="flat"
        )
        self.button_2.place(
            x=22.0,
            y=208.0,
            width=196.0,
            height=59.0
        )

        self.button_image_3 = PhotoImage(
            file=self.relative_to_assets("button_3.png"))
        self.button_3 = Button(
            self.canvas,
            image=self.button_image_3,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("self.button_3 clicked"),
            relief="flat"
        )
        self.button_3.place(
            x=24.0,
            y=15.0,
            width=196.0,
            height=74.0
        )

        self.button_image_4 = PhotoImage(
            file=self.relative_to_assets("button_4.png"))
        self.button_4 = Button(
            self.canvas,
            image=self.button_image_4,
            borderwidth=0,
            highlightthickness=0,
            command=self.add_args,
            relief="flat"
        )
        self.button_4.place(
            x=399.0,
            y=261.0,
            width=105.99998474121094,
            height=34.0
        )

        self.button_image_5 = PhotoImage(
            file=self.relative_to_assets("button_5.png"))
        self.button_5 = Button(
            self.canvas,
            image=self.button_image_5,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("self.button_5 clicked"),
            relief="flat"
        )
        self.button_5.place(
            x=22.0,
            y=125.0,
            width=196.0,
            height=59.0
        )


if __name__ == '__main__':
    init_window = Tk()  # 实例化出一个父窗口
    tool = MY_ARGS_GUI(init_window)
    tool.set_args_window()
    init_window.mainloop()
