# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer
import datetime
import pickle
import time
from gui.NGFW.build_main import gui_main
from pathlib import Path
from loguru import logger
# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Button, PhotoImage, messagebox, Toplevel, Label, StringVar
from tkinter.messagebox import showwarning


def main(log):
    OUTPUT_PATH = Path(__file__).parent
    ASSETS_PATH = OUTPUT_PATH / Path("assets")

    def relative_to_assets(path: str) -> Path:
        return ASSETS_PATH / Path(path)

    def gui_start():
        print("ok")
        gui_main.gui_start(log)

    def not_login():
        messagebox.showwarning('sorry', "please login")

    def usr_log_in():
        # 输入框获取用户名密码
        usr_name = entry_1.get()
        usr_pwd = entry_2.get()
        # 从本地字典获取用户信息，如果没有则新建本地数据库
        try:
            with open("../usr_info.pickle", 'rb') as usr_file:
                usrs_info = pickle.load(usr_file)
        except FileNotFoundError:
            with open('../usr_info.pickle', 'wb') as usr_file:
                usrs_info = {'admin': 'admin'}
                pickle.dump(usrs_info, usr_file)
        # 判断用户名和密码是否匹配
        if usr_name in usrs_info:
            if usr_pwd == usrs_info[usr_name]:
                print(usr_name)
                print(usr_pwd)
                messagebox.showinfo(title='welcome',
                                    message='欢迎您：' + usr_name)
                window.destroy()
                logger.info(usr_name+" logged in at "+str(time.time()))
                gui_start()
            else:
                messagebox.showerror(message='密码错误')
        # 用户名密码不能为空
        elif usr_name == '' or usr_pwd == '':
            messagebox.showerror(message='用户名或密码为空')
        # 不在数据库中弹出是否注册的框
        else:
            is_signup = messagebox.askyesno('欢迎', '您还没有注册，是否现在注册')
            if is_signup:
                usr_sign_up()

    # 注册函数
    def usr_sign_up():
        # 确认注册时的相应函数
        def signtowcg():
            # 获取输入框内的内容
            nn = new_name.get()
            np = new_pwd.get()
            npf = new_pwd_confirm.get()
            rk = register_key.get()
            if rk == 'adminbuaa':
                # 本地加载已有用户信息,如果没有则已有用户信息为空
                try:
                    with open('usr_info.pickle', 'rb') as usr_file:
                        exist_usr_info = pickle.load(usr_file)
                except FileNotFoundError:
                    exist_usr_info = {}

                    # 检查用户名存在、密码为空、密码前后不一致
                if nn in exist_usr_info:
                    messagebox.showerror('错误', '用户名已存在')
                elif np == '' or nn == '':
                    messagebox.showerror('错误', '用户名或密码为空')
                elif np != npf:
                    messagebox.showerror('错误', '密码前后不一致')
                # 注册信息没有问题则将用户名密码写入数据库
                else:
                    exist_usr_info[nn] = np
                    with open('usr_info.pickle', 'wb') as usr_file:
                        pickle.dump(exist_usr_info, usr_file)
                    messagebox.showinfo('欢迎', '注册成功')
                    logger.info("user signed up "+str(exist_usr_info)+str(time.time()))
                    # 注册成功关闭注册框
                    window_sign_up.destroy()
            else:
                showwarning('warning', 'register key is incorrect')

        # 新建注册界面
        window_sign_up = Toplevel(window)
        window_sign_up.geometry('350x200')
        window_sign_up.title('注册')
        # 用户名变量及标签、输入框
        new_name = StringVar()
        Label(window_sign_up, text='用户名：').place(x=10, y=10)
        Entry(window_sign_up, textvariable=new_name).place(x=150, y=10)
        # 密码变量及标签、输入框
        new_pwd = StringVar()
        Label(window_sign_up, text='请输入密码：').place(x=10, y=50)
        Entry(window_sign_up, textvariable=new_pwd, show='*').place(x=150, y=50)
        # 重复密码变量及标签、输入框
        new_pwd_confirm = StringVar()
        Label(window_sign_up, text='请再次输入密码：').place(x=10, y=90)
        Entry(window_sign_up, textvariable=new_pwd_confirm, show='*').place(x=150, y=90)
        # register key
        register_key = StringVar()
        Label(window_sign_up, text='register key：').place(x=10, y=130)
        Entry(window_sign_up, textvariable=register_key, show='*').place(x=150, y=130)
        # 确认注册按钮及位置
        bt_confirm_sign_up = Button(window_sign_up, text='确认注册',
                                    command=signtowcg)
        bt_confirm_sign_up.place(x=150, y=170)

    # 退出的函数
    def usr_sign_quit():
        logger.info("user quit at "+str(time.time()))
        window.destroy()

    window = Tk()

    window.geometry("1317x855")
    window.configure(bg="#282B2D")

    canvas = Canvas(
        window,
        bg="#282B2D",
        height=855,
        width=1317,
        bd=0,
        highlightthickness=0,
        relief="ridge"
    )

    canvas.place(x=0, y=0)
    canvas.create_rectangle(
        0.0,
        0.0,
        345.7995910644531,
        855.3531494140625,
        fill="#D9D9D9",
        outline="")

    button_image_1 = PhotoImage(
        file=relative_to_assets("button_1.png"))
    button_1 = Button(
        image=button_image_1,
        borderwidth=0,
        highlightthickness=0,
        command=usr_sign_quit,
        relief="flat"
    )
    button_1.place(
        x=70.5535888671875,
        y=736.8928833007812,
        width=193.36904907226562,
        height=64.45635986328125
    )

    button_image_2 = PhotoImage(
        file=relative_to_assets("button_2.png"))
    button_2 = Button(
        image=button_image_2,
        borderwidth=0,
        highlightthickness=0,
        command=not_login,
        relief="flat"
    )
    button_2.place(
        x=68.8115234375,
        y=555.71826171875,
        width=196.85317993164062,
        height=64.45635986328125
    )

    button_image_3 = PhotoImage(
        file=relative_to_assets("button_3.png"))
    button_3 = Button(
        image=button_image_3,
        borderwidth=0,
        highlightthickness=0,
        command=not_login,
        relief="flat"
    )
    button_3.place(
        x=101.91070556640625,
        y=481.6805419921875,
        width=166.3670654296875,
        height=32.22817611694336
    )

    button_image_4 = PhotoImage(
        file=relative_to_assets("button_4.png"))
    button_4 = Button(
        image=button_image_4,
        borderwidth=0,
        highlightthickness=0,
        command=not_login,
        relief="flat"
    )
    button_4.place(
        x=102.78173828125,
        y=437.2579345703125,
        width=166.3670654296875,
        height=32.22817611694336
    )

    button_image_5 = PhotoImage(
        file=relative_to_assets("button_5.png"))
    button_5 = Button(
        image=button_image_5,
        borderwidth=0,
        highlightthickness=0,
        command=not_login,
        relief="flat"
    )
    button_5.place(
        x=101.91070556640625,
        y=398.0614929199219,
        width=166.3670654296875,
        height=32.22817611694336
    )

    button_image_6 = PhotoImage(
        file=relative_to_assets("button_6.png"))
    button_6 = Button(
        image=button_image_6,
        borderwidth=0,
        highlightthickness=0,
        command=not_login,
        relief="flat"
    )
    button_6.place(
        x=68.8115234375,
        y=314.4424743652344,
        width=202.079345703125,
        height=64.45635223388672
    )

    button_image_7 = PhotoImage(
        file=relative_to_assets("button_7.png"))
    button_7 = Button(
        image=button_image_7,
        borderwidth=0,
        highlightthickness=0,
        command=not_login,
        relief="flat"
    )
    button_7.place(
        x=73.16665649414062,
        y=216.88690185546875,
        width=193.36904907226562,
        height=64.45635986328125
    )

    button_image_8 = PhotoImage(
        file=relative_to_assets("button_8.png"))
    button_8 = Button(
        image=button_image_8,
        borderwidth=0,
        highlightthickness=0,
        command=not_login,
        relief="flat"
    )
    button_8.place(
        x=87.10317993164062,
        y=112.36309814453125,
        width=166.3670654296875,
        height=64.45635986328125
    )

    image_image_1 = PhotoImage(
        file=relative_to_assets("image_1.png"))
    image_1 = canvas.create_image(
        158.1329345703125,
        42.130950927734375,
        image=image_image_1
    )

    canvas.create_text(
        785.670654296875,
        778.702392578125,
        anchor="nw",
        text="下一代防火墙V1.0，感谢使用",
        fill="#FFFFFF",
        font=("Inter", 34 * -1)
    )

    image_image_2 = PhotoImage(
        file=relative_to_assets("image_2.png"))
    image_2 = canvas.create_image(
        605.3829345703125,
        159.297607421875,
        image=image_image_2
    )

    canvas.create_text(
        382.3829345703125,
        249.11508178710938,
        anchor="nw",
        text="主要参与人",
        fill="#D9D9D9",
        font=("Roboto Regular", 27 * -1)
    )

    image_image_3 = PhotoImage(
        file=relative_to_assets("image_3.png"))
    image_3 = canvas.create_image(
        457.3829345703125,
        403.3452453613281,
        image=image_image_3
    )

    image_image_4 = PhotoImage(
        file=relative_to_assets("image_4.png"))
    image_4 = canvas.create_image(
        622.8789672851562,
        403.3452453613281,
        image=image_image_4
    )

    canvas.create_rectangle(
        382.3829345703125,
        527.84521484375,
        961.6190185546875,
        756.9265747070312,
        fill="#958F93",
        outline="")

    button_image_9 = PhotoImage(
        file=relative_to_assets("button_9.png"))
    button_9 = Button(
        image=button_image_9,
        borderwidth=0,
        highlightthickness=0,
        # command=lambda: print("button_9 clicked"),
        command=usr_log_in,
        relief="flat"
    )
    button_9.place(
        x=597.5277709960938,
        y=688.986083984375,
        width=88.8452377319336,
        height=26.130950927734375
    )

    button_image_10 = PhotoImage(
        file=relative_to_assets("button_10.png"))
    button_10 = Button(
        image=button_image_10,
        borderwidth=0,
        highlightthickness=0,
        # command=lambda: print("button_10 clicked"),
        command=usr_sign_up,
        relief="flat"
    )
    button_10.place(
        x=481.6805419921875,
        y=688.986083984375,
        width=88.8452377319336,
        height=23.517852783203125
    )

    canvas.create_text(
        405.0297546386719,
        645.4345092773438,
        anchor="nw",
        text="密码",
        fill="#000000",
        font=("Roboto Regular", 15 * -1)
    )

    entry_image_1 = PhotoImage(
        file=relative_to_assets("entry_1.png"))
    entry_bg_1 = canvas.create_image(
        584.4623107910156,
        660.6775665283203,
        image=entry_image_1
    )
    entry_1 = Entry(
        bd=0,
        bg="#F8F8F8",
        highlightthickness=0
    )
    entry_1.place(
        x=472.9702453613281,
        y=645.4345092773438,
        width=222.984130859375,
        height=28.486114501953125
    )

    canvas.create_text(
        405.0297546386719,
        604.4960327148438,
        anchor="nw",
        text="用户名",
        fill="#000000",
        font=("Roboto Regular", 15 * -1)
    )

    entry_image_2 = PhotoImage(
        file=relative_to_assets("entry_2.png"))
    entry_bg_2 = canvas.create_image(
        584.4623107910156,
        619.7390899658203,
        image=entry_image_2
    )
    entry_2 = Entry(
        bd=0,
        bg="#F8F8F8",
        highlightthickness=0
    )
    entry_2.place(
        x=472.9702453613281,
        y=604.4960327148438,
        width=222.984130859375,
        height=28.486114501953125
    )

    canvas.create_text(
        400.6745910644531,
        548.75,
        anchor="nw",
        text="登陆",
        fill="#000000",
        font=("Roboto Regular", 27 * -1)
    )

    image_image_5 = PhotoImage(
        file=relative_to_assets("image_5.png"))
    image_5 = canvas.create_image(
        658.0,
        427.0,
        image=image_image_5
    )

    window.resizable(True, True)
    window.mainloop()


if __name__ == '__main__':
    dt = datetime.datetime.now()
    logger.add("../log/"+dt.strftime("%Y-%m-%d%H-%M-%S")+"_running.log")
    main(logger)
